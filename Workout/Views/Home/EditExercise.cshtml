@model Workout.Models.Exercise

@{
    ViewData["Title"] = "Edit Exercise";
    ViewData["Description"] = "Modify exercise ";
    ViewData["Keywords"] = "update, modify, exercise";

    string number = Convert.ToString(Model.Weight).Replace(",", "."); ;
}

<h1>Edit @Model.Name</h1>
@if (ViewBag.error != null)
{
    <div class="alert-danger">@ViewBag.error</div>
}

<h4>Exercise</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditExercise">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="ExerciseId" class="form-control" type="hidden" value="@Model.ExerciseId" />
                <span asp-validation-for="ExerciseId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <select class="form-control" name="Name" id="Name">
                </select>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Category" class="control-label"></label>
                <select class="form-control" name="Category" id="Category" onchange="categoryChange()">
                    @foreach (var item in Enum.GetValues(typeof(Category)))
                    {
                        if (Model.Category == item.ToString())
                        {
                            <option value="@item" selected>@item</option>
                        }
                        else
                        {
                            <option value="@item">@item</option>
                        }

                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Weight" class="control-label" id="WeightLabel"></label>
                <input asp-for="Weight" class="form-control" value="@number"/>
                <span asp-validation-for="Weight" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Muscle" class="control-label"></label>
                <input asp-for="Muscle" class="form-control" />
                <span asp-validation-for="Muscle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="Workout" class="form-control" type="hidden" value="@Model.Workout" />
                <span asp-validation-for="Workout" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Exercise" asp-route-id="@Model.ExerciseId">Back to Exercise</a>
</div>
<script>
    window.onload = (event) => {
        categoryChange();
    };
    function populate(exercise) {
        $.ajax({
            type: "GET",
            url: 'http://localhost:8989/api/exercise/' + exercise,
            data: {},
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                $('#Name').empty();
                $.each(response, function (index, item) {
                    if (item == "@Model.Name") {
                        $('#Name').append('<option value="' + item + '" selected >' + item + '</option>')
                    }
                    else {
                        $('#Name').append('<option value="' + item + '" >' + item + '</option>')
                    }
                })
            }

        });
    }
    function categoryChange() {
        var cat = document.getElementById("Category");
        var weight = document.getElementById("WeightLabel");
        if (cat.value === "Yoga" || cat.value == "Cardio") {
            weight.innerHTML = "Duration (min)";
        } else {
            weight.innerHTML = "Weight (Kg)";
        }
        populate(cat.value);
    }
    
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
